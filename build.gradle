// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.2.60'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0-beta05'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext.versions = [
        // SDK
        minSdk           : 19,
        targetSdk        : 28,
        compileSdk       : 28,

        //Tools
        buildTools       : '28.0.1',

        dagger2          : '2.16',
        archComponents   : '1.1.1',
        room             : '1.1.1',
        supportLibrary   : '27.1.1',
        constraintLayout : '1.1.2',

        // Testing
        junit            : '4.12',
        hamcrest         : '1.3',
        mockito          : '2.21.0',
        rules            : '1.0.2',
        runner           : '1.0.2',
        espresso         : '3.0.2',
        powerMock        : '2.0.0-beta.5',

        //Network and Image loading
        moshi            : '1.6.0',
        picasso          : '2.5.2',
        okHttp           : '3.11.0',
        retrofit         : '2.4.0',
        okHttp3Downloader: '1.1.0',
        gson             : '2.8.5',

        // Others
        timber           : '4.7.1',
        leakCanary       : '1.6.1',
        gag              : '1.0.1'
]

ext.androidSupportLibraries = [
        design                 : "com.android.support:design:$rootProject.ext.versions.supportLibrary",
        percent                : "com.android.support:percent:$rootProject.ext.versions.supportLibrary",
        customTabs             : "com.android.support:customtabs:$rootProject.ext.versions.supportLibrary",
        palette                : "com.android.support:palette-v7:$rootProject.ext.versions.supportLibrary",
        transition             : "com.android.support:transition:$rootProject.ext.versions.supportLibrary",
        cardView               : "com.android.support:cardview-v7:$rootProject.ext.versions.supportLibrary",
        appCompat              : "com.android.support:appcompat-v7:$rootProject.ext.versions.supportLibrary",
        recyclerView           : "com.android.support:recyclerview-v7:$rootProject.ext.versions.supportLibrary",
        coreUI                 : "com.android.support:support-core-ui:$rootProject.ext.versions.supportLibrary",
        fragment               : "com.android.support:support-fragment:$rootProject.ext.versions.supportLibrary",
        annotations            : "com.android.support:support-annotations:$rootProject.ext.versions.supportLibrary",
        vectorDrawable         : "com.android.support:support-vector-drawable:$rootProject.ext.versions.supportLibrary",
        animatedVectorDrawable : "com.android.support:animated-vector-drawable:$rootProject.ext.versions.supportLibrary",
        constraintLayout       : "com.android.support.constraint:constraint-layout:$rootProject.ext.versions.constraintLayout",
        multidex               : "com.android.support:multidex:$rootProject.ext.versions.multidex",
        multidexInstrumentation: "com.android.support:multidex-instrumentation:$rootProject.ext.versions.multidex",
        compat                 : "com.android.support:support-compat:$rootProject.ext.versions.supportLibrary"
]

ext.androidTestingSupportLibraries = [
        rules                 : "com.android.support.test:rules:$rootProject.ext.versions.rules",
        runner                : "com.android.support.test:runner:$rootProject.ext.versions.runner",
        espressoCore          : "com.android.support.test.espresso:espresso-core:$rootProject.ext.versions.espresso",
        espressoIntents       : "com.android.support.test.espresso:espresso-intents:$rootProject.ext.versions.espresso",
        espressoContrib       : "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.versions.espresso",
        espressoIdlingResource: "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.versions.espresso"
]

ext.archComponents = [
        roomRuntime : "android.arch.persistence.room:runtime:$rootProject.ext.versions.room",
        roomTesting : "android.arch.persistence.room:testing:$rootProject.ext.versions.room",
        roomCompiler: "android.arch.persistence.room:compiler:$rootProject.ext.versions.room",
        coreTesting : "android.arch.core:core-testing:$rootProject.ext.versions.archComponents",
        commonJava8 : "android.arch.lifecycle:common-java8:$rootProject.ext.versions.archComponents"
]

ext.testing = [
        junit                    : "junit:junit:$rootProject.ext.versions.junit",
        mockitoCore              : "org.mockito:mockito-core:$rootProject.ext.versions.mockito",
        hamcrestAll              : "org.hamcrest:hamcrest-all:$rootProject.ext.versions.hamcrest",
        powermockCore            : "org.powermock:powermock-core:$rootProject.ext.versions.powerMock",
        powermockApiMockito2     : "org.powermock:powermock-api-mockito2:$rootProject.ext.versions.powerMock",
        powermockModuleJunit4    : "org.powermock:powermock-module-junit4:$rootProject.ext.versions.powerMock",
        powermockModuleJunit4Rule: "org.powermock:powermock-module-junit4-rule:$rootProject.ext.versions.powerMock"
]

ext.dagger = [
        dagger                : "com.google.dagger:dagger:$rootProject.ext.versions.dagger2",
        daggerAndroid         : "com.google.dagger:dagger-android:$rootProject.ext.versions.dagger2",
        daggerCompiler        : "com.google.dagger:dagger-compiler:$rootProject.ext.versions.dagger2",
        daggerAndroidSupport  : "com.google.dagger:dagger-android-support:$rootProject.ext.versions.dagger2",
        daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$rootProject.ext.versions.dagger2"
]

ext.libraries = [
        gag   : "com.google.gag:gag:$rootProject.ext.versions.gag",
        timber: "com.jakewharton.timber:timber:$rootProject.ext.versions.timber",
]

ext.kt = [
        stdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
]

ext.leakCanary = [
        android    : "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.versions.leakCanary",
        androidNoOp: "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.versions.leakCanary",
        fragments  : "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.ext.versions.leakCanary"
]

ext.networking = [
        moshi                    : "com.squareup.moshi:moshi:$rootProject.ext.versions.moshi",
        okhttp                   : "com.squareup.okhttp3:okhttp:$rootProject.ext.versions.okHttp",
        picasso                  : "com.squareup.picasso:picasso:$rootProject.ext.versions.picasso",
        retrofit                 : "com.squareup.retrofit2:retrofit:$rootProject.ext.versions.retrofit",
        moshiConverter           : "com.squareup.retrofit2:converter-moshi:$rootProject.ext.versions.retrofit",
        loggingInterceptor       : "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.versions.okHttp",
        picasso2OkHttp3Downloader: "com.jakewharton.picasso:picasso2-okhttp3-downloader:$rootProject.ext.versions.okHttp3Downloader"
]